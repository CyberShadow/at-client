\include{/include/test-results}

#\set{jsInHeader}{\quote{
#    <!-- Due to browser differences, we need to do three different tests to determine their values -->
#    <script type='text/javascript'>
#
#    function closeMyPopup() \{
#        document.getElementById("logPopup").style.display = "none";
#        document.getElementById("logFrame").src = "";
#
#        return false;
#    \}
#
#    function fireMyPopup(dataid) \{
#
#        // Determine how much the visitor had scrolled
#
#        var scrolledX, scrolledY;
#        if( self.pageYOffset ) \{
#          scrolledX = self.pageXOffset;
#          scrolledY = self.pageYOffset;
#        \} else if( document.documentElement && document.documentElement.scrollTop ) \{
#          scrolledX = document.documentElement.scrollLeft;
#          scrolledY = document.documentElement.scrollTop;
#        \} else if( document.body ) \{
#          scrolledX = document.body.scrollLeft;
#          scrolledY = document.body.scrollTop;
#        \}
#
#        // Determine the coordinates of the center of the page
#
#        var centerX, centerY;
#        if( self.innerHeight ) \{
#          centerX = self.innerWidth;
#          centerY = self.innerHeight;
#        \} else if( document.documentElement && document.documentElement.clientHeight ) \{
#          centerX = document.documentElement.clientWidth;
#          centerY = document.documentElement.clientHeight;
#        \} else if( document.body ) \{
#          centerX = document.body.clientWidth;
#          centerY = document.body.clientHeight;
#        \}
#
#        var leftOffset = scrolledX + (centerX * 0.15)/ 2;
#        var topOffset = scrolledY + (centerY * 0.20) / 2;
#
#        var d = document.getElementById("logPopup");
#        d.style.top = topOffset + "px";
#        d.style.left = leftOffset + "px";
#        d.style.width = (centerX * 0.85) + "px";
#        d.style.height = (centerY * 0.80) + "px";
#
#        var h = document.getElementById("logHeader");
#        var i = document.getElementById("logFrame");
#        i.src = "test_log.ghtml?dataid=" + dataid;
#        i.width = d.style.width;
#        i.height = ((centerY * 0.80) - h.clientHeight) + "px";;
#
#        d.style.display = "block";
#        return false;
#    \}
#
#    </script> 
#}}

\htmlhead{AutoTester}{}{}{
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8">
  <link rel="stylesheet" href="tester2.css" type="text/css">
  #\jsInHeader
}{}{
  <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
}  # {\if{\op{\get{dataid}}{V}}{\ onLoad='return fireMyPopup(\get{dataid});'}}

#Current docs:
#  \href{Linux_64}{docs/Linux_64/2.0/} |
#  \href{Linux_32}{docs/Linux_32/2.0/} |
#  \href{Win_32}{docs/Win_32/2.0/}
#<p>

# build list of test types
\sqlexec{select id, name from test_types order by id}
\set{i}{1}
\while{\sqlrow{type_\get{i}_id}{type_\get{i}_name}}{
    \inc{i}
}
\set{numtypes}{\i}

# get highest numbered test run
\sqlexec{select max(id) from test_runs}
\ignore{\sqlrow{db_max_id}}

\if{
    \not{\op{\get{runmin}}{V}{}}
    \not{\op{\get{runmax}}{V}{}}
    \op{\get{runmax}}{>}{\db_max_id}
}{
    # min = max - 49
    \set{runmax}{\db_max_id}
    \set{runmin}{\op{\runmax}{-}{49}}
}{
    \set{usedInputMinMax}{1}
}

# no inputs, clears a result set
\set{resetresult}{\quote{
    \set{i}{1}
    \while{
        \op{\numtypes}{>}{\i}
    }{
        \set{result_id}{}
        \set{result_start}{}
        \set{result_end}{}
        \set{result_duration}{}
        \set{result_platform}{}
        \set{result_rc_\i}{}
        \set{result_st_\i}{}
        \set{result_et_\i}{}
        \set{result_dur_\i}{}
        \set{result_id_\i}{}

        \inc{i}
    }
}}

# \1 == id of test to check
\set{resultClass}{\quote{
    \if{\eq{\get{result_rc_\1}}{0}}{
        {pass}
    }{
        \if{\eq{\get{result_rc_\1}}{}}{
            \if{\eq{\get{result_st_\1}}{}}{
                {unknown}
            }{
                {running}
            }
        }{
            {fail}
        }
    }
}}

# \1 == id of test to check
\set{resultText}{\quote{
    \if{\eq{\get{result_rc_\1}}{0}}{
        {P}
    }{
        \if{\eq{\get{result_rc_\1}}{}}{
            \if{\eq{\get{result_st_\1}}{}}{
                {&nbsp;}
            }{
                {R}
            }
        }{
            {F}
        }
    }
}}

# render the html for one result set
\set{showFirstResultSet}{\quote{
    <table class="first">
        <tr><td colspan="3" class="time">\get{result_start} (\get{result_duration})</td></tr>
        <tr class="data header">
            <td class="result \resultClass{1} checkout">
                \href{checkout}{test_data.ghtml?dataid=\get{result_id_1}}</td>
            <td>build</td>
            <td>test</td>
        </tr>
        <tr class="data dmd">
            <td>dmd</td>
            <td class="result \resultClass{2} build" title="\get{result_dur_2}">
                \href{\resultText{2}}{test_data.ghtml?dataid=\get{result_id_2}}</td>
            <td class="result \resultClass{7} test"  title="\get{result_dur_7}">
                \href{\resultText{7}}{test_data.ghtml?dataid=\get{result_id_7}}</td>
        </tr>
        <tr class="data druntime">
            <td>druntime</td>
            <td class="result \resultClass{3} build" title="\get{result_dur_3}">
                \href{\resultText{3}}{test_data.ghtml?dataid=\get{result_id_3}}</td>
            <td class="result \resultClass{5} test"  title="\get{result_dur_5}">
                \href{\resultText{5}}{test_data.ghtml?dataid=\get{result_id_5}}</td>
        </tr>
        <tr class="data phobos">
            <td>phobos</td>
            <td class="result \resultClass{4} build" title="\get{result_dur_4}">
                \href{\resultText{4}}{test_data.ghtml?dataid=\get{result_id_4}}</td>
            <td class="result \resultClass{6} test"  title="\get{result_dur_6}">
                \href{\resultText{6}}{test_data.ghtml?dataid=\get{result_id_6}}</td>
        </tr>
    </table>
}}

\set{showresultset}{\quote{
    \if{
        \not{\shownFirstResultSet}
    }{
        \showFirstResultSet
        #\set{shownFirstResultSet}{1}
    }{
        non-first result set id: \get{result_id}<br>
        \set{i}{1}
        \while{\op{\numtypes}{>}{\i}}{
            \if{
                \eq{\get{result_rc_\i}}{0}
            }{
                \set{text}{pass}
                \set{class}{pass}
            }{
                \if{\eq{\get{result_rc_\i}}{}}{
                    \if{\eq{\get{result_st_\i}}{}}{
                        \set{text}{&nbsp;}
                        \set{class}{unknown}
                    }{
                        \set{text}{running}
                        \set{class}{running}
                    }
                }{
                    \set{text}{fail}
                    \set{class}{fail}
                }
            }
            non-first result testid \get{result_id_\i} rc = \get{result_rc_\i}<br>
#                \if{
#                    \eq{\get{class}}{unknown}
#                    \eq{\get{class}}{running}
#                }{
#                    \get{text}
#                }{
#                    \href{\get{text}}{test_data.ghtml?dataid=\get{result_id_\i}}
#                }
            \inc{i}
        }
    }
    \resetresult
}}

# \1 == platform
# uses \runmin and \runmax and \type_* from global scope
\set{draw}{\quote{

    \set{shownFirstResultSet}{}
    \resetresult
    \set{previd}{}

    \sqlexec{
            select tr.id, tr.start_time, tr.end_time, timediff(ifnull(tr.end_time,now()), tr.start_time), tr.platform,
                   td.id, td.test_type_id, td.start_time, td.end_time, timediff(ifnull(td.end_time,now()), td.start_time), td.rc
              from test_runs tr left join test_data td on tr.id = td.test_run_id
             where tr.platform = "\sqlquote{\1}" and
                   \runmax >= tr.id && tr.id >= \runmin
          order by tr.start_time desc, tr.id desc
    }
    \set{haverow}{\sqlrow{id}{start_time}{end_time}{duration}{platform}{tdid}{tdtid}{tdst}{tdet}{tddur}{tdrc}}
    \while{\haverow}{
        \set{result_id}{\get{id}}
        \set{result_start}{\get{start_time}}
        \set{result_end}{\get{end_time}}
        \set{result_duration}{\get{duration}}
        \set{result_platform}{\get{platform}}

        \set{result_rc_\get{tdtid}}{\get{tdrc}}
        \set{result_st_\get{tdtid}}{\get{tdst}}
        \set{result_et_\get{tdtid}}{\get{tdet}}
        \set{result_dur_\get{tdtid}}{\get{tddur}}
        \set{result_id_\get{tdtid}}{\get{tdid}}
        \set{keepgoing}{1}
        \set{previd}{\get{id}}
        \while{
            \get{keepgoing}
        }{
            \set{haverow}{\sqlrow{id}{start_time}{end_time}{duration}{platform}{tdid}{tdtid}{tdst}{tdet}{tddur}{tdrc}}
            \if{\haverow}{
                \if{\eq{\get{previd}}{\get{id}}}{
                    \set{result_rc_\get{tdtid}}{\get{tdrc}}
                    \set{result_st_\get{tdtid}}{\get{tdst}}
                    \set{result_et_\get{tdtid}}{\get{tdet}}
                    \set{result_dur_\get{tdtid}}{\get{tddur}}
                    \set{result_id_\get{tdtid}}{\get{tdid}}
                }{
                    \showresultset
                    \unset{keepgoing}
                }
            }{
                \unset{keepgoing}
            }
        }
    }
    \showresultset

}}

<div class="pager">
    \if{
        \eq{\db_max_id}{\get{runmax}}
        \op{\runmax}{>}{\db_max_id}
    }{
        \if{\get{usedInputMinMax}}{
            <a href="index.ghtml">Newest</a>
        }{Newest}\ |
        <a href="index.ghtml?runmax=\runmin&amp;runmin=\op{\runmin}{-}{49}">Older</a>
    }{
        <a href="index.ghtml">Newest</a>
        \set{newmax}{\op{\runmax}{+}{49}}
        \set{newmin}{\op{\runmin}{-}{49}}

        # db_max_id: \get{db_max_id}, newmax: \get{newmax}, newmin: \get{newmin}<br>
        \if{\op{\db_max_id}{>}{\newmax}}{
            | <a href="index.ghtml?runmax=\newmax&amp;runmin=\runmax">Newer</a>
        }
        \if{\op{\newmin}{>=}{0}}{
            | <a href="index.ghtml?runmax=\runmin&amp;runmin=\newmin">Older</a>
        }
    }
</div>

<table class="runs">

<tr>
<th title="FreeBSD with a 32 bit dmd binary and 32 bit libraries">FreeBSD 32</th>
<th title="Linux with a 32 bit dmd binary and 32 bit libraries">Linux 32</th>
<th title="Linux with a 32 bit dmd binary and 64 bit libraries">Linux 32/64</th>
<th title="Linux with a 64 bit dmd binary and 32 bit libraries">Linux 64/32</th>
<th title="Linux with a 64 bit dmd binary and 64 bit libraries">Linux 64/64</th>
<th title="OS/X with a 32 bit dmd binary and 32 bit libraries">OSX 32</th>
<th title="Windows with a 32 bit dmd binary and 32 bit libraries">Windows 32</th>
</tr>

<tr>
<td>\draw{FreeBSD_32}</td>
<td>\draw{Linux_32}</td>
<td>\draw{Linux_32_64}</td>
<td>\draw{Linux_64_32}</td>
<td>\draw{Linux_64_64}</td>
<td>\draw{Darwin_32}</td>
<td>\draw{Win_32}</td>
</tr>

</table>

<div>
<a href="http://github.com/braddr/d-tester">Source of auto-tester</a>
</div>

#<div id='logPopup' name='logPopup' style='position: absolute; width: 500px; height: 800px; display: none; background: \#ddd; border: 1px solid \#000; right: 0px; top: 0px'>
#  <div id='logHeader'>
#    <input type='submit' value=' Close me! ' onClick='return closeMyPopup();'>
#  </div>
#  <iframe id='logFrame' frameborder=0
#    onClick='return closeMyPopup();'></iframe>
#</div>

\htmlfoot

