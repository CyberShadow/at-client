\include{/include/test-results}

\htmlhead{D2 Auto-Tester -- Pulls}{}{}{
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8">
  <meta http-equiv="refresh" content="60">
  <link rel="stylesheet" href="pull-tester1.css" type="text/css">
  #\jsInHeader
}{}{
  <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
}  # {\if{\op{\get{dataid}}{V}}{\ onLoad='return fireMyPopup(\get{dataid});'}}


# \1 == rc
\set{processRC}{\quote{
    \if{\eq{\1}{0}}{
        \set{class}{pass}
        \set{text}{P}
    }{
        \if{\eq{\1}{}}{
            \set{class}{running}
            \set{text}{R}
        }{
            \set{class}{fail}
            \set{text}{F}
        }
    }
}}

# \1 == text
# \2 == platform
# \3 == title
\set{buildHeader}{\quote{
    <th title="\3">\1</th>
}}

<div class="banner">D2 Auto-Tester -- Pulls</div>

<div class="links" style="text-align:right; margin-top: -20px;">
<a href="http://d.puremagic.com/test-results/">D2 Auto Tester</a><br>
</div>

\set{firstrow}{1}
\sqlexec{
  select gu.username, gu.id, gp.id, p.name, gp.pull_id
    from github_pulls gp, github_users gu, projects p
   where gp.user_id = gu.id and gu.trusted = 0 and gp.open=1 and gp.project_id = p.id
   order by 1, 2
}
\while{\sqlrow{gu_username}{gu_id}{gp_id}{p_name}{gp_pullid}}{
  \if{\firstrow}{
    <table border=1 class="authtable">

    <tr class="authheaders">
    <th>Username</th>
    <th>Userid</th>
    <th>GitHub page</th>
    <tr><td colspan=3>Not yet authorized users</td></tr>
    \set{firstrow}{}
  }
 
  <tr>
    <td>\get{gu_username}</td>
    <td>\get{gu_id}</td>
    <td><a href="https://github.com/D-Programming-Language/\get{p_name}/pull/\get{gp_pullid}">\get{p_name}/\get{gp_pullid}</a></td>
  </tr> 
}
\if{\not{\firstrow}}{
  </table>
}

\sqlexec{
  select ptr.id,
         p.name,
         ghp.pull_id,
         ptr.platform,
         ptr.start_time,
         ptr.rc,
         ptr.deleted
    from projects       p,
         github_pulls   ghp,
         github_users   u,
         pull_test_runs ptr,
         (select g_p_id, platform, max(start_time) as st from pull_test_runs group by g_p_id, platform) maxes
   where maxes.g_p_id = ptr.g_p_id and
         maxes.platform = ptr.platform and
         maxes.st = ptr.start_time and
         ptr.g_p_id = ghp.id and
         ghp.project_id = p.id and
         ghp.user_id = u.id and
         u.trusted
          and ptr.start_time > date_sub(now(), interval 1 week)
   order by p.name, ghp.pull_id, ptr.platform
}
\while{\sqlrow{ptr_id}{p_name}{pull_id}{ptr_platform}{ptr_start_time}{ptr_rc}{ptr_deleted}}{
  \set{\get{p_name}_\get{pull_id}_\get{ptr_platform}_id}{\get{ptr_id}}
  \set{\get{p_name}_\get{pull_id}_\get{ptr_platform}_rc}{\get{ptr_rc}}
  \set{\get{p_name}_\get{pull_id}_\get{ptr_platform}_deleted}{\eq{\get{ptr_deleted}}{1}}
}

# \1 == project name
# \2 == pull id
# \3 == platform
\set{drawcol}{\quote{
  \if{\get{\1_\2_\3_rc}}{
    \processRC{\get{\1_\2_\3_rc}}
    <td class="pullcell \get{class}\if{\get{\1_\2_\3_deleted}}{\ old}"><a href="pull.ghtml?runid=\get{\1_\2_\3_id}">\get{text}\if{\get{\1_\2_\3_deleted}}{\ (old)}</a></td>
  }{
    \if{\get{\1_\2_\3_id}}{
      <td class="pullcell running"><a href="pull.ghtml?runid=\get{\1_\2_\3_id}">R</a></td>
    }{
      <td class="pullcell unknown">&nbsp;</td>
    }
  }
}}

# \1 == project name (dmd, druntime, phobos)
# \2 == project id
# \3 == pull id
# \4 == userid
# \5 == ref
# \6 == updated_at
\set{drawrow}{\quote{
  <tr class="pullrow">
    <td class="pullcell header"><a href="https://github.com/D-Programming-Language/\1/pull/\3">\1/\3</a></td>
    <td class="pullcell header"><a href="pull-history.ghtml?projectid=\2&pullid=\3">\4/\5</a></td>
    <td class="pullcell header">\6</td>
    \drawcol{\1}{\3}{FreeBSD_32}
    \drawcol{\1}{\3}{FreeBSD_64}
    \drawcol{\1}{\3}{Linux_32}
    \drawcol{\1}{\3}{Linux_64_64}
    \drawcol{\1}{\3}{Linux_32_64}
    \drawcol{\1}{\3}{Linux_64_32}
    #\drawcol{\1}{\3}{Darwin_32}
    #\drawcol{\1}{\3}{Darwin_64_64}
    #\drawcol{\1}{\3}{Darwin_32_64}
    #\drawcol{\1}{\3}{Darwin_64_32}
    \drawcol{\1}{\3}{Win_32}
  </tr>
}}

# \1 == project name (dmd, druntime, phobos)
# \2 == pull id
# \3 == platform
\set{getastate}{\quote{
  \if{
    \get{\1_\2_\3_id}
  }{
    \if{
      \not{\get{\1_\2_\3_deleted}}
    }{
      \if{
        \eq{\get{\1_\2_\3_rc}}{0}
        \eq{\get{\1_\2_\3_rc}}{}
      }{
        {passed}
      }{
        {failed}
      }
    }
  }
}}

# \1 == project name (dmd, druntime, phobos)
# \2 == pull id
\set{getstate}{\quote{
  \set{result}{old}
  \set{ss1}{\getastate{\1}{\2}{FreeBSD_32}}
  \set{ss2}{\getastate{\1}{\2}{FreeBSD_64}}
  \set{ss3}{\getastate{\1}{\2}{Win_32}}
  \set{ss4}{\getastate{\1}{\2}{Linux_32}}
  \set{ss5}{\getastate{\1}{\2}{Linux_64_64}}
  \set{ss6}{\getastate{\1}{\2}{Linux_32_64}}
  \set{ss7}{\getastate{\1}{\2}{Linux_64_32}}
  \set{i}{1}
  \while{\op{8}{>}{\get{i}}}{
    \if{
      \eq{\get{ss\i}}{failed}
    }{
      \set{i}{7}
      \set{result}{hasfailures}
    }{
      \if{
        \eq{\get{ss\i}}{passed}
      }{
        \set{result}{haspasses}
      }
    }
    \inc{i}
  }
  {\result}
}}

\sqlexec{
  select p.name, p.id, ghp.pull_id, u.username, ghp.head_ref, ghp.updated_at
    from projects p, github_pulls ghp, github_users u
   where ghp.project_id = p.id and ghp.open and ghp.user_id = u.id and u.trusted
   #order by p.name, ghp.updated_at desc
   order by 1, 3 desc
}
\while{\sqlrow{p_name}{p_id}{ghp_pull_id}{u_username}{ghp_head_ref}{ghp_updated_at}}{
  \set{rowoutput}{\drawrow{\get{p_name}}{\get{p_id}}{\get{ghp_pull_id}}{\get{u_username}}{\get{ghp_head_ref}}{\get{ghp_updated_at}}}
  \set{name}{\get{p_name}_\getstate{\get{p_name}}{\get{ghp_pull_id}}}
  \set{\get{name}}{\get{\get{name}} \get{rowoutput}}
}

<table border=1 class="pulltable">

<tr class="pullheaders">
<th>GitHub page</th>
<th>Test History</th>
<th>Last Updated</th>
\buildHeader{FreeBSD 32}{FreeBSD_32}{FreeBSD with a 32 bit dmd binary and 32 bit libraries}
\buildHeader{FreeBSD 64}{FreeBSD_64}{FreeBSD with a 64 bit dmd binary and 64 bit libraries}
\buildHeader{Linux 32}{Linux_32}{Linux with a 32 bit dmd binary and 32 bit libraries}
\buildHeader{Linux 64}{Linux_64_64}{Linux with a 64 bit dmd binary and 64 bit libraries}
\buildHeader{Linux 32/64}{Linux_32_64}{Linux with a 32 bit dmd binary and 64 bit libraries}
\buildHeader{Linux 64/32}{Linux_64_32}{Linux with a 64 bit dmd binary and 32 bit libraries}
#\buildHeader{OSX 32}{Darwin_32}{OS/X with a 32 bit dmd binary and 32 bit libraries}
#\buildHeader{OSX 64}{Darwin_64_64}{OS/X with a 64 bit dmd binary and 64 bit libraries}
#\buildHeader{OSX 32/64}{Darwin_32_64}{OSX with a 32 bit dmd binary and 64 bit libraries}
#\buildHeader{OSX 64/32}{Darwin_64_32}{OSX with a 64 bit dmd binary and 32 bit libraries}
\buildHeader{Windows 32}{Win_32}{Windows with a 32 bit dmd binary and 32 bit libraries}
</tr>

<tr class="secheader"><td colspan="10">Has Passes</td></tr>
\get{dmd_haspasses}
\get{druntime_haspasses}
\get{phobos_haspasses}

<tr class="secheader"><td colspan="10">Has Failures</td></tr>
\get{dmd_hasfailures}
\get{druntime_hasfailures}
\get{phobos_hasfailures}

<tr class="secheader"><td colspan="10">Old results, pending testing</td></tr>
\get{dmd_old}
\get{druntime_old}
\get{phobos_old}

</table>

<div style="margin-top: 2em;">
<a href="http://d.puremagic.com/test-results/greasemonkey.ghtml">GreaseMonkey scripts</a><br>
<a href="http://github.com/braddr/d-tester">Source of auto-tester</a>
</div>

\htmlfoot

