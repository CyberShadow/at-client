\include{/include/test-results}
\set{page_type}{pulls}

\validateURLParameter{projectid}

\pageHeader{60}{\get{projectid}}{
    <link rel="stylesheet" href="/test-results/css/pulls.css" type="text/css">
}

# \1 == rc
\set{processRC}{\quote{
    \if{\eq{\1}{0}}{
        \set{class}{pass}
        \set{text}{P}
    }{
        \if{\eq{\1}{}}{
            \set{class}{running}
            \set{text}{R}
        }{
            \set{class}{fail}
            \set{text}{F}
        }
    }
}}

# \1 == text
# \2 == platform
# \3 == title
\set{buildHeader}{\quote{
    <th title="\3">\1</th>
}}

\set{firstrow}{1}
\sqlexec{
  select gu.username, gu.id, gp.id, r.name, gp.pull_id
    from github_pulls gp, github_users gu, repositories r, repo_branches rb
   where gp.user_id = gu.id and
         gu.trusted = 0 and
         gp.open = 1 and
         gp.r_b_id = rb.id and
         rb.repository_id = r.id and
         r.project_id = \get{projectid}
   order by gu.username, gu.id
}
\while{\sqlrow{gu_username}{gu_id}{gp_id}{p_name}{gp_pullid}}{
  \if{\firstrow}{
    <table border=1 class="authtable">

    <tr class="authheaders">
    <th>Username</th>
    <th>Userid</th>
    <th>GitHub page</th>
    <tr><td colspan=3>Not yet authorized users</td></tr>
    \set{firstrow}{}
  }
 
  <tr>
    <td>\get{gu_username}</td>
    <td>\get{gu_id}</td>
    <td><a href="https://github.com/D-Programming-Language/\get{p_name}/pull/\get{gp_pullid}">\get{p_name}/\get{gp_pullid}</a></td>
  </tr> 
}
\if{\not{\firstrow}}{
  </table>
}

\sqlexec{
  select ptr.id,
         r.name,
         ghp.pull_id,
         ptr.platform,
         ptr.start_time,
         ptr.rc,
         ptr.deleted
    from repositories   r,
         repo_branches  rb,
         github_pulls   ghp,
         github_users   u,
         pull_test_runs ptr,
         (select g_p_id, platform, max(start_time) as st from pull_test_runs, github_pulls ghp where ghp.id = g_p_id and ghp.open = 1 group by g_p_id, platform) maxes
   where maxes.g_p_id = ptr.g_p_id and
         maxes.platform = ptr.platform and
         maxes.st = ptr.start_time and
         ptr.g_p_id = ghp.id and
         ghp.r_b_id = rb.id and
         rb.repository_id = r.id and
         ghp.user_id = u.id and
         ghp.open = 1 and
         u.trusted and
         r.project_id = \get{projectid} and
         ptr.start_time > date_sub(now(), interval 1 week)
   order by r.name, ghp.pull_id, ptr.platform
}
\while{\sqlrow{ptr_id}{p_name}{pull_id}{ptr_platform}{ptr_start_time}{ptr_rc}{ptr_deleted}}{
  \set{\get{p_name}_\get{pull_id}_\get{ptr_platform}_id}{\get{ptr_id}}
  \set{\get{p_name}_\get{pull_id}_\get{ptr_platform}_rc}{\get{ptr_rc}}
  \set{\get{p_name}_\get{pull_id}_\get{ptr_platform}_deleted}{\eq{\get{ptr_deleted}}{1}}
}

# \1 == repo name
# \2 == pull id
# \3 == platform
\set{drawcol}{\quote{
  \if{\get{\1_\2_\3_rc}}{
    \processRC{\get{\1_\2_\3_rc}}
    <td class="pullcell \get{class}\if{\get{\1_\2_\3_deleted}}{\ old}"><a href="pull.ghtml?projectid=\get{projectid}&amp;runid=\get{\1_\2_\3_id}">\get{text}\if{\get{\1_\2_\3_deleted}}{\ (old)}</a></td>
  }{
    \if{\get{\1_\2_\3_id}}{
      <td class="pullcell running"><a href="pull.ghtml?projectid=\get{projectid}&amp;runid=\get{\1_\2_\3_id}">R</a></td>
    }{
      <td class="pullcell unknown">&nbsp;</td>
    }
  }
}}

# \1 == repo name (dmd, druntime, phobos)
# \2 == repo id
# \3 == pull id
# \4 == userid
# \5 == ref
# \6 == updated_at
# \7 == head_date
\set{drawrow}{\quote{
    <td class="pullcell header"><a href="https://github.com/D-Programming-Language/\1/pull/\3">\1/\3</a></td>
    <td class="pullcell header"><a href="pull-history.ghtml?projectid=\get{projectid}&amp;repoid=\2&amp;pullid=\3">\4/\5</a></td>
    #<td class="pullcell header">\6</td>
    <td class="pullcell header">\7</td>
    \drawcol{\1}{\3}{FreeBSD_32}
    \drawcol{\1}{\3}{FreeBSD_64}
    \drawcol{\1}{\3}{Linux_32}
    \drawcol{\1}{\3}{Linux_64_64}
    \drawcol{\1}{\3}{Linux_32_64}
    \drawcol{\1}{\3}{Linux_64_32}
    \drawcol{\1}{\3}{Darwin_32}
    \drawcol{\1}{\3}{Darwin_64_64}
    #\drawcol{\1}{\3}{Darwin_32_64}
    #\drawcol{\1}{\3}{Darwin_64_32}
    \drawcol{\1}{\3}{Win_32}
    \drawcol{\1}{\3}{Win_64}
}}

# \1 == repo name (dmd, druntime, phobos)
# \2 == pull id
# \3 == platform
\set{getastate}{\quote{
  \if{
    \get{\1_\2_\3_id}
  }{
    \if{
      \not{\get{\1_\2_\3_deleted}}
    }{
      \if{
        \eq{\get{\1_\2_\3_rc}}{0}
        \eq{\get{\1_\2_\3_rc}}{}
      }{
        {passed}
      }{
        {failed}
      }
    }
  }
}}

# \1 == repo name (dmd, druntime, phobos)
# \2 == pull id
\set{getstate}{\quote{
  \set{result}{old}
  \set{ss1}{\getastate{\1}{\2}{FreeBSD_32}}
  \set{ss2}{\getastate{\1}{\2}{FreeBSD_64}}
  \set{ss3}{\getastate{\1}{\2}{Win_32}}
  \set{ss4}{\getastate{\1}{\2}{Win_64}}
  \set{ss5}{\getastate{\1}{\2}{Linux_32}}
  \set{ss6}{\getastate{\1}{\2}{Linux_64_64}}
  \set{ss7}{\getastate{\1}{\2}{Linux_32_64}}
  \set{ss8}{\getastate{\1}{\2}{Linux_64_32}}
  \set{ss9}{\getastate{\1}{\2}{Darwin_32}}
  \set{ss10}{\getastate{\1}{\2}{Darwin_64_64}}
  #\set{ss11}{\getastate{\1}{\2}{Darwin_32_64}}
  #\set{ss12}{\getastate{\1}{\2}{Darwin_64_32}}
  \set{i}{1}
  \while{\op{11}{>}{\get{i}}}{
    \if{
      \eq{\get{ss\i}}{failed}
    }{
      \set{i}{10}
      \set{result}{hasfailures}
    }{
      \if{
        \eq{\get{ss\i}}{passed}
      }{
        \set{result}{haspasses}
      }
    }
    \inc{i}
  }
  {\result}
}}

\set{num_dmd_old}{0}
\set{num_dmd_hasfailures}{0}
\set{num_dmd_haspasses}{0}
\set{num_druntime_old}{0}
\set{num_druntime_hasfailures}{0}
\set{num_druntime_haspasses}{0}
\set{num_phobos_old}{0}
\set{num_phobos_hasfailures}{0}
\set{num_phobos_haspasses}{0}

\sqlexec{
    select r.name, r.id, ghp.pull_id, u.username, ghp.head_ref, ghp.updated_at, ghp.head_date
      from repositories r, repo_branches rb, github_pulls ghp, github_users u
     where ghp.r_b_id = rb.id and rb.repository_id = r.id and ghp.open = 1 and ghp.user_id = u.id and u.trusted and r.project_id = \get{projectid}
     order by r.name, ghp.pull_id desc
}
\while{\sqlrow{p_name}{p_id}{ghp_pull_id}{u_username}{ghp_head_ref}{ghp_updated_at}{ghp_head_date}}{
    # get the bucket to place the row in
    \set{name}{\get{p_name}_\getstate{\get{p_name}}{\get{ghp_pull_id}}}

    # get one row of html and store it in name_num
    \set{\get{name}_\get{num_\get{name}}}{\drawrow{\get{p_name}}{\get{p_id}}{\get{ghp_pull_id}}{\get{u_username}}{\get{ghp_head_ref}}{\get{ghp_updated_at}}{\get{ghp_head_date}}}

    \inc{num_\get{name}}
}

\set{total_haspasses}{\op{\op{\get{num_dmd_haspasses}}{+}{\get{num_druntime_haspasses}}}{+}{\get{num_phobos_haspasses}}}
\set{total_hasfailures}{\op{\op{\get{num_dmd_hasfailures}}{+}{\get{num_druntime_hasfailures}}}{+}{\get{num_phobos_hasfailures}}}
\set{total_old}{\op{\op{\get{num_dmd_old}}{+}{\get{num_druntime_old}}}{+}{\get{num_phobos_old}}}

<table border=1 class="pulltable">
<tr class="pullheaders">
<td class=""></td>
<th>GitHub page</th>
<th>Test History</th>
<th>Last Committed</th>
\buildHeader{F 32}{FreeBSD_32}{FreeBSD with a 32 bit dmd binary and 32 bit output}
\buildHeader{F 64}{FreeBSD_64}{FreeBSD with a 64 bit dmd binary and 64 bit output}
\buildHeader{L 32}{Linux_32}{Linux with a 32 bit dmd binary and 32 bit output}
\buildHeader{L 64}{Linux_64_64}{Linux with a 64 bit dmd binary and 64 bit output}
\buildHeader{L 32/64}{Linux_32_64}{Linux with a 32 bit dmd binary and 64 bit output}
\buildHeader{L 64/32}{Linux_64_32}{Linux with a 64 bit dmd binary and 32 bit output}
\buildHeader{O 32}{Darwin_32}{OS/X with a 32 bit dmd binary and 32 bit output}
\buildHeader{O 64}{Darwin_64_64}{OS/X with a 64 bit dmd binary and 64 bit output}
#\buildHeader{O 32/64}{Darwin_32_64}{OSX with a 32 bit dmd binary and 64 bit output}
#\buildHeader{O 64/32}{Darwin_64_32}{OSX with a 64 bit dmd binary and 32 bit output}
\buildHeader{W 32}{Win_32}{Windows with a 32 bit dmd binary and 32 bit output}
\buildHeader{W 64}{Win_64}{Windows with a 32 bit dmd binary and 64 bit output}
</tr>

# \1 == repo
# \2 == state
# \3 == label
\set{drawOneSection}{\quote{
    \set{i}{0}
    \while{ \op{\get{num_\1_\2}}{>}{\get{i}} }{
        <tr class="pullrow">
            \if{\firstsecrow}{
                \set{firstsecrow}{}
                <td class="sec" rowspan="\if{\op{\get{total_\2}}{<}{5}}{\op{\get{total_\2}}{+}{1}}{\get{total_\2}}"><div class="rotate">\3</div></td>
            }
            \get{\1_\2_\get{i}}
        </tr>

        \inc{i}
    }
    \set{totalrows}{\op{\get{totalrows}}{+}{\get{i}}}
}}

\set{totalrows}{0}
\set{firstsecrow}{1}
\set{secheader}{&nbsp;&nbsp;&nbsp;Has&nbsp;Passes}
\drawOneSection{dmd}{haspasses}{\get{secheader}}
\drawOneSection{druntime}{haspasses}{\get{secheader}}
\drawOneSection{phobos}{haspasses}{\get{secheader}}
\if{\get{firstsecrow}}{
    <tr class="pullrow">
        <td class="sec"><div class="rotate">\get{secheader}</div></td>
        <td colspan="13"></td>
    </tr>
}{
    \if{\op{\get{totalrows}}{<}{5}}{<tr><td class="spacer" style="height:3em;" colspan="13">&nbsp;</td></tr>}
}

\set{totalrows}{0}
\set{firstsecrow}{1}
\set{secheader}{&nbsp;&nbsp;&nbsp;Has&nbsp;Failures}
\drawOneSection{dmd}{hasfailures}{\get{secheader}}
\drawOneSection{druntime}{hasfailures}{\get{secheader}}
\drawOneSection{phobos}{hasfailures}{\get{secheader}}
\if{\get{firstsecrow}}{
    <tr class="pullrow">
        <td class="sec"><div class="rotate">\get{secheader}</div></td>
        <td colspan="13"></td>
    </tr>
}{
    \if{\op{\get{totalrows}}{<}{5}}{<tr><td class="spacer" style="height:3em;" colspan="13">&nbsp;</td></tr>}
}

\set{totalrows}{0}
\set{firstsecrow}{1}
\set{secheader}{&nbsp;&nbsp;&nbsp;Old&nbsp;Results}
\drawOneSection{dmd}{old}{\get{secheader}}
\drawOneSection{druntime}{old}{\get{secheader}}
\drawOneSection{phobos}{old}{\get{secheader}}
\if{\get{firstsecrow}}{
    <tr class="pullrow">
        <td class="sec"><div class="rotate">\get{secheader}</div></td>
        <td colspan="13"></td>
    </tr>
}{
    \if{\op{\get{totalrows}}{<}{5}}{<tr><td class="spacer" style="height:3em;" colspan="13">&nbsp;</td></tr>}
}

</table>

\pageFooter

